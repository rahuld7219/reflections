When would you want to use a remote repository rather than keeping all your work local?
  when I want to keep my repository in cloud for sharing and collaboration and also can access from anywhere.

Why might you want to always pull changes manually rather than having Git automatically stay up-to-date with your remote repository?
	as if git pull automatically then there might be lot's of pull unecessary for changes we don't want to sync, 
	and also if we want to share only some part/version of our code or we want different version at remote repository and at local repository.
	
Describe the differences between forks, clones, and branches. When would you use one instead of another?
	clone:to make a copy of a remote repository to our local machine or to make a copy of our local repository locally.
	fork: to copy someone else's github repository to our github.
	branches: to create a different version/path/branch of our local repository.

What is the benefit of having a copy of the last known state of the remote stored locally?
	so when we get offline we can still be able to comapre the online version with our local version and can merge locally if we want to.
	
How would you collaborate without using Git or GitHub? What would be easier, and what would be harder?
	I can collaborate offline by sharing offline(by LAN, pen drive, etc) or by working together or by using file sharing services online.
	It will be very hard to keep track of version history and collaborating but easier without any commands as we do everything manually. 
	But collaborating with someone living far off would be very difficult.
	
When would you want to make changes in a separate branch rather than directly in master? What benefits does each approach have?
	wehn I want someone to review my changes first, so before commiting my changes to main branch I add the changes in separate branch and then pull request
	(i.e.,merge request asking other to review the changes and then merge it into the main branch 
	 or let me know after reviewing whether	I can merge the changes into main branch)
	 
	 when I make changes in separate branch I am not disturbing the main branch and my main code will not be affected if some bug happen.
	 while if I am sure about the changes then I can directly add it to main/master branch without making separate branch and without any pull requests.